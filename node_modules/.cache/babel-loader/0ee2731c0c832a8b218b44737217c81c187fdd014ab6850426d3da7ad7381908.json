{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\React\\\\strt\\\\src\\\\TDL.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Work from './Work';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TDL = () => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [task, listTask] = useState([]);\n  const [deleted, setDeleted] = useState(\"\");\n  const [done, setDone] = useState([]);\n  const set = event => {\n    setData(event.target.value);\n  };\n  const show = () => {\n    listTask(preval => {\n      return [...preval, data];\n    });\n  };\n  const erase = (id, txt) => {\n    setDeleted(txt);\n    setDone(pv => [...pv, txt]);\n    listTask(pval => {\n      return pval.filter((arrElem, index) => {\n        return index !== id;\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: set\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: show,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), task.map((val, index) => {\n      return /*#__PURE__*/_jsxDEV(Work, {\n        text: val,\n        id: index,\n        onSelect: erase\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"DONE TASK::::::::\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), done.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(TDL, \"FzakfTLtPGikm597q3KVNXySuOM=\");\n_c = TDL;\nexport default TDL;\nvar _c;\n$RefreshReg$(_c, \"TDL\");","map":{"version":3,"names":["React","useState","Work","jsxDEV","_jsxDEV","Fragment","_Fragment","TDL","_s","data","setData","task","listTask","deleted","setDeleted","done","setDone","set","event","target","value","show","preval","erase","id","txt","pv","pval","filter","arrElem","index","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","val","text","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/React/strt/src/TDL.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Work from './Work';\r\nconst TDL = () => {\r\n\r\nconst[data,setData]=useState(\"\");\r\nconst[task,listTask]=useState([]);\r\nconst[deleted,setDeleted]=useState(\"\");\r\nconst [done,setDone]=useState([]);\r\nconst set=(event)=>\r\n{\r\n    setData(event.target.value);\r\n}\r\n\r\nconst show=()=>\r\n{\r\n   listTask((preval)=>{\r\n    return[...preval,data];\r\n   })\r\n\r\n}\r\n\r\nconst erase=(id,txt)=>\r\n{\r\n  setDeleted(txt);\r\n  setDone((pv)=>\r\n  [...pv,txt]\r\n)\r\n    listTask((pval)=>{\r\n    return pval.filter((arrElem,index)=>{\r\n     \r\n      return index !== id;\r\n    });\r\n});\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    <input onChange={set}></input>\r\n    <button onClick={show}>+</button>\r\n    {task.map((val,index)=>{\r\n        return <Work text={val}\r\n        key={index}\r\n        id={index}\r\n        onSelect={erase}\r\n        />\r\n    })\r\n    }\r\n    <h3>DONE TASK::::::::</h3>\r\n    {\r\n      done.map((val)=>\r\n      {\r\n        return<h4>{val}</h4>\r\n\r\n      })\r\n    }\r\n    \r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TDL;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAK,CAACU,IAAI,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAK,CAACY,OAAO,EAACC,UAAU,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,IAAI,EAACC,OAAO,CAAC,GAACf,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAMgB,GAAG,GAAEC,KAAK,IAChB;IACIR,OAAO,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,IAAI,GAACA,CAAA,KACX;IACGT,QAAQ,CAAEU,MAAM,IAAG;MAClB,OAAM,CAAC,GAAGA,MAAM,EAACb,IAAI,CAAC;IACvB,CAAC,CAAC;EAEL,CAAC;EAED,MAAMc,KAAK,GAACA,CAACC,EAAE,EAACC,GAAG,KACnB;IACEX,UAAU,CAACW,GAAG,CAAC;IACfT,OAAO,CAAEU,EAAE,IACX,CAAC,GAAGA,EAAE,EAACD,GAAG,CACZ,CAAC;IACGb,QAAQ,CAAEe,IAAI,IAAG;MACjB,OAAOA,IAAI,CAACC,MAAM,CAAC,CAACC,OAAO,EAACC,KAAK,KAAG;QAElC,OAAOA,KAAK,KAAKN,EAAE;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;EACF,CAAC;EAGC,oBACEpB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACA3B,OAAA;MAAO4B,QAAQ,EAAEf;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9BhC,OAAA;MAAQiC,OAAO,EAAEhB,IAAK;MAAAU,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChCzB,IAAI,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAACT,KAAK,KAAG;MACnB,oBAAO1B,OAAA,CAACF,IAAI;QAACsC,IAAI,EAAED,GAAI;QAEvBf,EAAE,EAAEM,KAAM;QACVW,QAAQ,EAAElB;MAAM,GAFXO,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGT,CAAC;IACN,CAAC,CAAC,eAEFhC,OAAA;MAAA2B,QAAA,EAAI;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExBrB,IAAI,CAACuB,GAAG,CAAEC,GAAG,IACb;MACE,oBAAMnC,OAAA;QAAA2B,QAAA,EAAKQ;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAEtB,CAAC,CAAC;EAAA,eAIF,CAAC;AAEP,CAAC;AAAA5B,EAAA,CA1DKD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4DT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}