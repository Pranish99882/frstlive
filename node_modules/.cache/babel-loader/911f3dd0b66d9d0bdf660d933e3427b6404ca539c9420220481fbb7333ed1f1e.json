{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\React\\\\strt\\\\src\\\\App.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // const [fullname, setName] = useState({\n  //     fname: \"\",\n  //     adrs: \"\",\n  // });\n\n  // const [fnlname, setfnlname] = useState({\n  //     nm: \"\",\n  //     ad: \"\",\n  // });\n\n  // const disp = (event) => {\n  //     const { value, name } = event.target;\n\n  //     setName((preval) => {\n  //         if (name === 'fname') {\n  //             return {\n  //                 fname: value,\n  //                 adrs: preval.adrs,\n  //             };\n  //         }\n  //         else {\n  //             return {\n  //                 fname: preval.fname,\n  //                 adrs: value,\n  //             };\n  //         }\n  //     })\n  // }\n\n  // const show = (e) => {\n  //     e.preventDefault()\n  //     setfnlname((prevl) => {\n  //         return {\n  //             ...prevl,\n  //             nm: fullname.fname,\n  //             ad: fullname.adrs,\n  //         }\n  //     })\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", fnlname.nm, \" \", fnlname.ad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"chill my boy !!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Summit data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\n\n//const[adrs,setAdrs]=useState(\"\");\n//const[loctn,setLoctn]=useState(\"\");\n//const[fname,setFname]=useState(\"\");\n//let time=new Date().toLocaleTimeString();\n/*const disply=(event)=>{\r\n    setAdrs(event.target.value);\r\n }*/\n\n/*const show=()=>{\r\n   setFname(name);\r\n   setLoctn(adrs);\r\n\r\n}*/\n\n/*const incNum=()=>\r\n{\r\n    time=new Date().toLocaleTimeString();\r\n    updtval(time);\r\n\r\n}*/\n//setInterval(incNum,1000);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fnlname","nm","ad","fileName","_jsxFileName","lineNumber","columnNumber","action","type","name","id","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/React/strt/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n\r\n    // const [fullname, setName] = useState({\r\n    //     fname: \"\",\r\n    //     adrs: \"\",\r\n    // });\r\n\r\n    // const [fnlname, setfnlname] = useState({\r\n    //     nm: \"\",\r\n    //     ad: \"\",\r\n    // });\r\n\r\n\r\n    // const disp = (event) => {\r\n    //     const { value, name } = event.target;\r\n\r\n    //     setName((preval) => {\r\n    //         if (name === 'fname') {\r\n    //             return {\r\n    //                 fname: value,\r\n    //                 adrs: preval.adrs,\r\n    //             };\r\n    //         }\r\n    //         else {\r\n    //             return {\r\n    //                 fname: preval.fname,\r\n    //                 adrs: value,\r\n    //             };\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // const show = (e) => {\r\n    //     e.preventDefault()\r\n    //     setfnlname((prevl) => {\r\n    //         return {\r\n    //             ...prevl,\r\n    //             nm: fullname.fname,\r\n    //             ad: fullname.adrs,\r\n    //         }\r\n    //     })\r\n\r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Hello {fnlname.nm} {fnlname.ad}</h1>\r\n            <h2>chill my boy !!!!</h2>\r\n            <br />\r\n            {/* <form action=\"submit\">\r\n                <input type=\"text\" onChange={disp} placeholder=\"enter name\" name=\"fname\" value={fullname.fname} />\r\n                <input type=\"text\" onChange={disp} placeholder=\"enter address\" name=\"adrs\" value={fullname.adrs} />\r\n                <button type=\"submit\" onClick={show} >Click me:ðŸ™‚</button>\r\n            </form> */}\r\n            <form action=\"\">\r\n                <input type=\"text\" name=\"\" id=\"\" />\r\n                <input type=\"text\" name=\"\" id=\"\"/>\r\n                <button>Summit data</button>\r\n            </form>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n//const[adrs,setAdrs]=useState(\"\");\r\n//const[loctn,setLoctn]=useState(\"\");\r\n//const[fname,setFname]=useState(\"\");\r\n//let time=new Date().toLocaleTimeString();\r\n/*const disply=(event)=>{\r\n    setAdrs(event.target.value);\r\n }*/\r\n\r\n/*const show=()=>{\r\n   setFname(name);\r\n   setLoctn(adrs);\r\n\r\n}*/\r\n\r\n\r\n/*const incNum=()=>\r\n{\r\n    time=new Date().toLocaleTimeString();\r\n    updtval(time);\r\n\r\n}*/\r\n//setInterval(incNum,1000);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEd;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAIA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAAI,QAAA,GAAI,QAAM,EAACC,OAAO,CAACC,EAAE,EAAC,GAAC,EAACD,OAAO,CAACE,EAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxCX,OAAA;MAAAI,QAAA,EAAI;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BX,OAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAMNX,OAAA;MAAMY,MAAM,EAAC,EAAE;MAAAR,QAAA,gBACXJ,OAAA;QAAOa,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,EAAE;QAACC,EAAE,EAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCX,OAAA;QAAOa,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,EAAE;QAACC,EAAE,EAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClCX,OAAA;QAAAI,QAAA,EAAQ;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eAET,CAAC;AAEX,CAAC;AAAAK,EAAA,GAjEKb,GAAG;AAmET,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}