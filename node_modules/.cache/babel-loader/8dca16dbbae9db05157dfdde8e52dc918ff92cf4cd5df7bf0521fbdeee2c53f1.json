{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\React\\\\strt\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [fullname, setName] = useState({\n    fname: \"\",\n    adrs: \"\"\n  });\n  const [fnlname, setfnlname] = useState({\n    nm: \"\",\n    ad: \"\"\n  });\n  const disp = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setName(preval => {\n      if (name === 'fname') {\n        return {\n          fname: value,\n          adrs: preval.adrs\n        };\n      } else {\n        return {\n          fname: preval.fname,\n          adrs: value\n        };\n      }\n    });\n  };\n  const show = e => {\n    e.preventDefault();\n    setfnlname(prevl => {\n      return {\n        nm: fullname.fname,\n        ad: fullname.adrs\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hello \", fnlname.nm, \" \", fnlname.ad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"chill my boy !!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: disp,\n        placeholder: \"enter name\",\n        name: \"fname\",\n        value: fullname.fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: disp,\n        placeholder: \"enter address\",\n        name: \"adrs\",\n        value: fullname.adrs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: show,\n        children: \"Click me:\\uD83D\\uDE42\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"mwj8mRc2x6FENwORthCkgEEk5EA=\");\n_c = App;\nexport default App;\n\n//const[adrs,setAdrs]=useState(\"\");\n//const[loctn,setLoctn]=useState(\"\");\n//const[fname,setFname]=useState(\"\");\n//let time=new Date().toLocaleTimeString();\n/*const disply=(event)=>{\r\n    setAdrs(event.target.value);\r\n }*/\n\n/*const show=()=>{\r\n   setFname(name);\r\n   setLoctn(adrs);\r\n\r\n}*/\n\n/*const incNum=()=>\r\n{\r\n    time=new Date().toLocaleTimeString();\r\n    updtval(time);\r\n\r\n}*/\n//setInterval(incNum,1000);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","fullname","setName","fname","adrs","fnlname","setfnlname","nm","ad","disp","event","value","name","target","preval","show","e","preventDefault","prevl","children","fileName","_jsxFileName","lineNumber","columnNumber","action","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/React/strt/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n\r\n    const [fullname, setName] = useState({\r\n        fname: \"\",\r\n        adrs: \"\",\r\n    });\r\n\r\n    const [fnlname, setfnlname] = useState({\r\n        nm: \"\",\r\n        ad: \"\",\r\n    });\r\n\r\n\r\n    const disp = (event) => {\r\n        const { value, name } = event.target;\r\n\r\n        setName((preval) => {\r\n            if (name === 'fname') {\r\n                return {\r\n                    fname: value,\r\n                    adrs: preval.adrs,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    fname: preval.fname,\r\n                    adrs: value,\r\n                };\r\n            }\r\n        })\r\n    }\r\n\r\n    const show = (e) => {\r\n        e.preventDefault()\r\n        setfnlname((prevl) => {\r\n            return {\r\n                nm: fullname.fname,\r\n                ad: fullname.adrs,\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Hello {fnlname.nm} {fnlname.ad}</h1>\r\n            <h2>chill my boy !!!!</h2>\r\n            <br />\r\n            <form action=\"\">\r\n                <input type=\"text\" onChange={disp} placeholder=\"enter name\" name=\"fname\" value={fullname.fname} />\r\n                <input type=\"text\" onChange={disp} placeholder=\"enter address\" name=\"adrs\" value={fullname.adrs} />\r\n                <button onClick={show} >Click me:ðŸ™‚</button>\r\n            </form>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n//const[adrs,setAdrs]=useState(\"\");\r\n//const[loctn,setLoctn]=useState(\"\");\r\n//const[fname,setFname]=useState(\"\");\r\n//let time=new Date().toLocaleTimeString();\r\n/*const disply=(event)=>{\r\n    setAdrs(event.target.value);\r\n }*/\r\n\r\n/*const show=()=>{\r\n   setFname(name);\r\n   setLoctn(adrs);\r\n\r\n}*/\r\n\r\n\r\n/*const incNum=()=>\r\n{\r\n    time=new Date().toLocaleTimeString();\r\n    updtval(time);\r\n\r\n}*/\r\n//setInterval(incNum,1000);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}